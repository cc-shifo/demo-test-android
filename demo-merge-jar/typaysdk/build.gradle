plugins {
    id 'com.android.library'
}

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.2"

    defaultConfig {
        minSdkVersion 23
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {

    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'com.google.android.material:material:1.1.0'
    testImplementation 'junit:junit:4.+'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
    implementation 'com.google.code.gson:gson:2.8.6'
}

import org.tmatesoft.svn.core.wc.*
def getSVNVersion() {
    ISVNOptions options = SVNWCUtil.createDefaultOptions(true)
    SVNClientManager clientManager = SVNClientManager.newInstance(options)
    SVNStatusClient statusClient = clientManager.getStatusClient()
    SVNStatus status = statusClient.doStatus(projectDir, false)
    SVNRevision revision = status.getCommittedRevision()
    return revision.getNumber()
}

def jarVersion() {
    return "V" + getSVNVersion() + "R"
}

static def buildTime() {
    new Date().format("yyyyMMddHHmmss", TimeZone.getTimeZone("GMT+8"))
}

def jarName() {
    return "QianBaoPaySDK_" + jarVersion() + "_" + buildTime() + ".jar"
}

task buildJar(dependsOn:assemble, type: Copy) {
    def path = project.buildDir.absolutePath + '/intermediates/aar_main_jar/release/classes.jar'
    from(path)
    into('build/outputs/jar')
    rename("classes.jar", jarName())
}